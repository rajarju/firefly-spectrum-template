{"id":"../node_modules/@adobe/exc-app/index.js","dependencies":[{"name":"/Users/arjunraj/workshop/firefly-app-template/node_modules/@adobe/exc-app/index.js.map","includedInParent":true,"mtime":1593150770703},{"name":"/Users/arjunraj/workshop/firefly-app-template/node_modules/@adobe/exc-app/index.ts","includedInParent":true,"mtime":1593150770703},{"name":"/Users/arjunraj/workshop/firefly-app-template/package.json","includedInParent":true,"mtime":1593150899877},{"name":"/Users/arjunraj/workshop/firefly-app-template/node_modules/@adobe/exc-app/package.json","includedInParent":true,"mtime":1593150770703},{"name":"./src/Global","loc":{"line":26,"column":38},"parent":"/Users/arjunraj/workshop/firefly-app-template/node_modules/@adobe/exc-app/index.js","resolved":"/Users/arjunraj/workshop/firefly-app-template/node_modules/@adobe/exc-app/src/Global.js"}],"generated":{"js":"\"use strict\";\n/*************************************************************************\n * Copyright 2020 Adobe\n * All Rights Reserved.\n *\n * NOTICE: Adobe permits you to use, modify, and distribute this file in\n * accordance with the terms of the Adobe license agreement accompanying\n * it. If you have received this file from a source other than Adobe,\n * then your use, modification, or distribution of it requires the prior\n * written permission of Adobe.\n **************************************************************************/\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * API used to integrate as solution web application with the unified shell of the Adobe Experience\n * Cloud.\n * @packageDocumentation\n * @preferred\n */\nconst Global_1 = __importStar(require(\"./src/Global\"));\n/**\n * Get the runtime object which contains all unified-shell APIs.\n *\n * ***Example:***\n *\n * ```typescript\n * import React from 'react';\n * import ReactDOM from 'react-dom';\n * import excApp from '@adobe/exc-app';\n *\n * export class MyComponent extends React.Component {\n *   constructor(props) {\n *     this.runtime = excApp();\n *   }\n * }\n * ```\n * @returns The runtime object.\n */\nfunction runtime() {\n    // Pass through first argument for backwards compatibility\n    return Global_1.getImpl('default')(arguments[0]); // eslint-disable-line prefer-rest-params\n}\nexports.default = runtime;\n/**\n * Initializes a solution web application by invoking the bootstrap callback\n * once the runtime is ready.\n * 1. if the module is already defined, start to bootstrap\n * 2. otherwise define the global callback that will be called when runtime is ready.\n *\n * ***Example:***\n *\n * ```typescript\n * import React from 'react';\n * import ReactDOM from 'react-dom';\n * import runtime, {init} from '@adobe/exc-app';\n *\n * init(() => {\n *   ReactDOM.render(<MainComponent runtime={runtime()} />, document.querySelector('#main'));\n * });\n * ```\n * @param bootstrap Callback used to bootstrap a solution. The runtime object is passed in as a\n * parameter to this callback.\n */\nfunction init(bootstrap) {\n    const callback = () => {\n        bootstrap(runtime());\n    };\n    if (Global_1.default['exc-module-runtime']) {\n        callback();\n    }\n    else {\n        Global_1.default.EXC_MR_READY = callback;\n    }\n}\nexports.init = init;\n"},"sourceMaps":{"js":{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";AAAA;;;;;;;;;4EAS4E;;;;;;;;;AAE5E;;;;;GAKG;AAEH,uDAA6C;AAG7C;;;;;;;;;;;;;;;;;GAiBG;AACH,SAAwB,OAAO;IAC7B,0DAA0D;IAC1D,OAAO,gBAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,yCAAyC;AACpF,CAAC;AAHD,0BAGC;AAED;;;;;;;;;;;;;;;;;;;GAmBG;AACH,SAAgB,IAAI,CAAC,SAAqC;IACxD,MAAM,QAAQ,GAAG,GAAS,EAAE;QAC1B,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACvB,CAAC,CAAC;IACF,IAAI,gBAAM,CAAC,oBAAoB,CAAC,EAAE;QAChC,QAAQ,EAAE,CAAC;KACZ;SAAM;QACL,gBAAM,CAAC,YAAY,GAAG,QAAQ,CAAC;KAChC;AACH,CAAC;AATD,oBASC","sourcesContent":["/*************************************************************************\n * Copyright 2020 Adobe\n * All Rights Reserved.\n *\n * NOTICE: Adobe permits you to use, modify, and distribute this file in\n * accordance with the terms of the Adobe license agreement accompanying\n * it. If you have received this file from a source other than Adobe,\n * then your use, modification, or distribution of it requires the prior\n * written permission of Adobe.\n **************************************************************************/\n\n/**\n * API used to integrate as solution web application with the unified shell of the Adobe Experience\n * Cloud.\n * @packageDocumentation\n * @preferred\n */\n\nimport Global, {getImpl} from './src/Global';\nimport Runtime from './src/Runtime';\n\n/**\n * Get the runtime object which contains all unified-shell APIs.\n *\n * ***Example:***\n *\n * ```typescript\n * import React from 'react';\n * import ReactDOM from 'react-dom';\n * import excApp from '@adobe/exc-app';\n *\n * export class MyComponent extends React.Component {\n *   constructor(props) {\n *     this.runtime = excApp();\n *   }\n * }\n * ```\n * @returns The runtime object.\n */\nexport default function runtime(): Runtime {\n  // Pass through first argument for backwards compatibility\n  return getImpl('default')(arguments[0]); // eslint-disable-line prefer-rest-params\n}\n\n/**\n * Initializes a solution web application by invoking the bootstrap callback\n * once the runtime is ready.\n * 1. if the module is already defined, start to bootstrap\n * 2. otherwise define the global callback that will be called when runtime is ready.\n *\n * ***Example:***\n *\n * ```typescript\n * import React from 'react';\n * import ReactDOM from 'react-dom';\n * import runtime, {init} from '@adobe/exc-app';\n *\n * init(() => {\n *   ReactDOM.render(<MainComponent runtime={runtime()} />, document.querySelector('#main'));\n * });\n * ```\n * @param bootstrap Callback used to bootstrap a solution. The runtime object is passed in as a\n * parameter to this callback.\n */\nexport function init(bootstrap: (runtime: Runtime) => void): void {\n  const callback = (): void => {\n    bootstrap(runtime());\n  };\n  if (Global['exc-module-runtime']) {\n    callback();\n  } else {\n    Global.EXC_MR_READY = callback;\n  }\n}\n\nexport {Runtime};\n"]}},"error":null,"hash":"f50d66c89f68324e83c720cdb7788968","cacheData":{"env":{}}}